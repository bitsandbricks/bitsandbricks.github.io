<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Bits &amp; Bricks</title>
    <link>https://bitsandbricks.github.io/tags/r/</link>
    <description>Recent content in R on Bits &amp; Bricks</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>avazquez@gmail.com (H. Antonio Vazquez Brust)</managingEditor>
    <webMaster>avazquez@gmail.com (H. Antonio Vazquez Brust)</webMaster>
    <lastBuildDate>Thu, 30 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bitsandbricks.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducción al Machine Learning</title>
      <link>https://bitsandbricks.github.io/post/introduccion-al-machine-learning/</link>
      <pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/introduccion-al-machine-learning/</guid>
      <description>¡Machine Learning!. En resumidas cuentas, es el uso de estadística en forma automatizada para identificar patrones en grandes volúmenes de datos.
Dicho así suena poco emocionante, pero en la práctica el machine learning (de aquí en más ML) ha revolucionado unos cuantos campos debido a su creciente facilidad de uso y a su capacidad -en ciertos contextos- para predecir resultados con alta precisión.
Aquí mostraremos un ejemplo paso a paso de aplicación a un problema relativamente simple, un caso de clasificación binaria: sabiendo que los elementos de un grupo pertenecen a una u otra de dos categorías posibles, encontrar un método para identificar el grupo que les corresponde.</description>
    </item>
    
    <item>
      <title>DBSCAN: Machine Learning para detectar centros de actividad urbana</title>
      <link>https://bitsandbricks.github.io/post/dbscan-machine-learning-para-detectar-centros-de-actividad-urbana/</link>
      <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/dbscan-machine-learning-para-detectar-centros-de-actividad-urbana/</guid>
      <description>DBSCAN es un algoritmo de machine learning diseñado para detectar en forma automática “clusters”, es decir elementos próximos entre si de acuerdo a sus atributos en varias dimensiones.
A diferencia de otros algoritmos de clustering como KMeans, DBSCAN resulta muy adecuado para buscar patrones de agrupación en el espacio físico. Por ejemplo, en la distribución espacial de actividades humanas.
Como se ilustra debajo, entre varias alternativas DBSCAN es la única cuyos resultados aproximan los de un analista humano que estuviera clasificando puntos aglomerados en un mapa:</description>
    </item>
    
    <item>
      <title>Taxis en Buenos Aires: mapas claros y negocios turbios</title>
      <link>https://bitsandbricks.github.io/post/taxis-en-buenos-aires-mapas-claros-y-negocios-turbios/</link>
      <pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/taxis-en-buenos-aires-mapas-claros-y-negocios-turbios/</guid>
      <description>Hace unos meses, durante la Smart City Expo en Buenos Aires se organizó un Datatón bajo el título de “Un día en las ciudades a través de sus datos”. El evento fue organizado por los equipos de datos abiertos de la Nación, y la Ciudad y Provincia1 de Buenos Aires.
Con motivo del evento se hicieron públicos varios datasets con información urbana.</description>
    </item>
    
    <item>
      <title>Predicción de demanda de servicios urbanos con open data &#43; Facebook Prophet</title>
      <link>https://bitsandbricks.github.io/post/prediccion-de-demanda-de-servicios-urbanos-con-prophet/</link>
      <pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/prediccion-de-demanda-de-servicios-urbanos-con-prophet/</guid>
      <description>De todos los datasets que publica el portal de Open Data de Buenos Aires, mi favorito es sin dudas el que contiene los reclamos registrados por el Sistema Único de Atención Ciudadana (SUACI). El SUACI, también llamado BA 147, equivale a lo que en otras latitudes se conoce como servicio 311. El 311 es el número telefónico, complementado por un servicio web y en general una app también, al que los ciudadanos recurren para realizar reclamos al gobierno de la ciudad.</description>
    </item>
    
    <item>
      <title>Visualizando con R el historial de ubicaciones de Google (parte III)</title>
      <link>https://bitsandbricks.github.io/post/visualizando-con-r-el-historial-de-ubicaciones-de-google-parte-iii/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/visualizando-con-r-el-historial-de-ubicaciones-de-google-parte-iii/</guid>
      <description>En la entrega anterior, seguimos el rastro del usuario a través de las calles, y descubrimos donde vive.
Como cierre, vamos a visualizar los vuelos con los que el usuario conectó las ciudades por donde estuvo.
Para reproducir los resultados, recomiendo correr antes el código de la parte I, que deja preparados los sets de datos que vamos a utilizar aquí.
Identificando vuelos Durante los ejercicios anteriores, notamos que los datos contienen ubicaciones registradas a ambos lados del Atlántico.</description>
    </item>
    
    <item>
      <title>Visualizando con R el historial de ubicaciones de Google (parte II)</title>
      <link>https://bitsandbricks.github.io/post/visualizando-con-r-el-historial-de-ubicaciones-de-google-parte-ii/</link>
      <pubDate>Thu, 08 Jun 2017 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/visualizando-con-r-el-historial-de-ubicaciones-de-google-parte-ii/</guid>
      <description>En la parte I, vimos cómo descargar, limpiar y comenzar a visualizar los datos de nuestra ubicación que Google guarda cuando usamos servicios de la compañía. Hasta aquí nos habíamos concentrado en clasificar los datos según el tiempo y según los países visitados.
Ahora vamos a poner nuestra atención en el interior de las ciudades, para seguir los rastros que dejamos al recorrer las calles.
Para reproducir los resultados, recomiendo correr antes el código de la parte I, que deja preparados los sets de datos que vamos a utilizar aquí.</description>
    </item>
    
    <item>
      <title>Visualizando con R el historial de ubicaciones de Google (parte I)</title>
      <link>https://bitsandbricks.github.io/post/visualizando-con-r-el-historial-de-ubicaciones-de-google-parte-i/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
      <author>avazquez@gmail.com (H. Antonio Vazquez Brust)</author>
      <guid>https://bitsandbricks.github.io/post/visualizando-con-r-el-historial-de-ubicaciones-de-google-parte-i/</guid>
      <description>La irrupción de computadoras llenas de sensores que viajan el bolsillo de cada ciudadano -nuestros celulares- ha sido de sobra aprovechada por Google. Si no nos tomamos la molestia de inhabilitar funciones de localización activas de fábrica, todos los usuarios de celulares Android reportamos a Google nuestra posición, en forma constante. Y los usuarios de iPhones también, cuando usan servicios de la compañía en sus teléfonos.
A esta altura, ya todos sabemos que Google es una compañía bastante creepy.</description>
    </item>
    
  </channel>
</rss>
