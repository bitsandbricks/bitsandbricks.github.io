bbox <- c(min(mdz_poi$lng),
min(mdz_poi$lat),
max(mdz_poi$lng),
max(mdz_poi$lat))
mendoza <- get_stamenmap(bbox = bbox, maptype = "toner-background", zoom = 13)
ggmap(mendoza) +
geom_point(data = mdz_bares, aes(x = lng, y = lat), color = "orange", alpha = .5)
distancias <- mdz_bares %>%
select(lng, lat) %>% # extraemos las columnas de longitud y latitud
distm(fun = distGeo) %>% # Calculamos las distancias de acuerdo a la curvatura de la Tierra
as.dist() # convertimos en una matriz de distancias (el tipo de objeto que DBSCAN espera)
knitr::include_graphics('http://www.sthda.com/sthda/RDoc/images/dbscan-principle.png')
clusters <- dbscan(distancias, eps = 128, minPts = 5)
clusters
mdz_bares <- mdz_bares%>%
cbind(cluster = clusters[["cluster"]])
# Visualizamos en un capa los bares sin cluster, y luego los que estan agrupados en otra
ggmap(mendoza) +
geom_point(data = filter(mdz_bares, cluster == 0),
aes(x = lng, y = lat),
alpha = .5) +
geom_point(data = filter(mdz_bares, cluster > 0),
aes(x = lng, y = lat, color = factor(cluster)),
alpha = .5) +
labs(title = "Mendoza: clusters de bares",
color = "cluster")
assign_clusters <- function(poi_df, minPts = NA) {
# Para ciertas categorias, como educacion o salud, consideramos que a partir de n = 5 ya se
# forma clustering.
# Para las demas (retail y servicios) el umbral se eleva a 25
if(is.na(minPts)) {
if(poi_df[1, "categoria"] %in% c("banca", "cultura", "culto", "educacion", "entretenimiento",
"espacios_verdes", "gobierno_y_serv_publicos", "salud")) {
minPts <- 5
} else minPts <- 25
}
eps <- 128 #  metros de distancia máxima entre miembros de un cluster
poi_df[c("lng", "lat")] %>%
distm(fun = distHaversine) %>%
as.dist() %>%
dbscan(eps = eps, minPts = minPts) %>%
.[["cluster"]] %>%
cbind(poi_df, cluster = .)
}
mdz_poi <- read_csv("../../../code/Urban Analytics/mdz_poi_clusters.csv")
knitr::include_graphics('https://miro.medium.com/max/1016/1*F4IUmOJbbLMJiTgHxpoc7Q.png')
get_hull<- function(df) {
cbind(df$lng, df$lat) %>%
as.matrix() %>%
st_multipoint() %>%
st_convex_hull() %>%
st_sfc(crs = 4326) %>%
{st_sf(categoria = df$categoria[1], cluster = df$cluster[1], geom = .)}
}
hulls <- function(df) {
df %>%
split(.$cluster) %>%
map(get_hull) %>%
reduce(rbind)
}
mdz_cluster_hulls <- mdz_poi %>%
filter(cluster != 0) %>%
select(lng, lat, categoria, cluster) %>%
split(.$categoria) %>%
map(hulls) %>%
reduce(rbind)
ggplot(mdz_cluster_hulls) + geom_sf()
ggplot(mdz_cluster_hulls) + geom_sf(aes(fill = categoria))
ggplot(mdz_cluster_hulls) +
geom_sf(aes(fill = categoria)) +
theme_minimal()
ggplot(mdz_cluster_hulls) +
geom_sf(aes(fill = categoria))
ggplot(mdz_cluster_hulls) +
geom_sf(aes(fill = categoria), alpha = .5, color = NA)
ggplot(mdz_cluster_hulls) +
geom_sf(aes(fill = categoria), alpha = .8, color = NA)
ggplot(mdz_cluster_hulls) +
geom_sf(aes(fill = categoria), alpha = .7, color = NA)
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
ggrepel::geom_label_repel(data = hulls_por_cat,
aes(label = categoria, color = factor(categoria), geometry = geom),
stat = "sf_coordinates",
inherit.aes = FALSE) +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=2))) +
theme(legend.position="bottom")
#Para reducir la cantidad de etiquetas
hulls_por_cat <- mdz_cluster_hulls %>%
group_by(categoria) %>%
summarise()
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
ggrepel::geom_label_repel(data = hulls_por_cat,
aes(label = categoria, color = factor(categoria), geometry = geom),
stat = "sf_coordinates",
inherit.aes = FALSE) +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=2))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
ggrepel::geom_label_repel(data = hulls_por_cat,
aes(label = categoria, color = factor(categoria), geometry = geom),
stat = "sf_coordinates",
inherit.aes = FALSE) +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
ggrepel::geom_label_repel(data = hulls_por_cat,
aes(label = categoria, color = factor(categoria), geometry = geom),
stat = "sf_coordinates",
inherit.aes = FALSE) +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(type = "cat") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(type = "qual") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(type = "Set1") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(palette = "Set1") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(palette = "Set2") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(palette = "Set3") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
ggmap(mendoza) +
coord_sf(crs = st_crs(3857)) + # Necesario cuando se combinan ggmap y geom_sf
geom_sf(data = hulls_por_cat, fill = NA, size = 1.5, alpha = .5,
aes(color = factor(categoria)), inherit.aes = FALSE) +
geom_point(data = filter(mdz_poi, cluster == 0), size = .1, alpha =.1,
aes(x = lng, y = lat)) +
geom_point(data = filter(mdz_poi, cluster != 0), size = .2, alpha =.2,
aes(x = lng, y = lat, color = factor(categoria))) +
scale_color_brewer(palette = "Paired") +
labs(y = "", x = "",
title="Mendoza: clusters de actividad identificados",
color = "categoría") +
# Eliminamos las etiquetas de latitud y longitud de los ejes
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
guides(colour = guide_legend(override.aes = list(size=4, alpha = 1))) +
theme(legend.position="bottom")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install_theme()
blogdown::install_theme(theme = "halogenica/beautifulhugo")
?blogdown::install_theme
blogdown::install_theme(theme = "halogenica/beautifulhugo", force = TRUE)
blogdown:::new_post_addin()
getwd()
knitr::include_graphics("img/rstudio_livecode/ngrok_login.png")
knitr::include_graphics("img/rstudio_livecode/ngrok_setup_install.png")
knitr::include_graphics("img/rstudio_livecode/ngrok_autorizar.png")
knitr::include_graphics("img/rstudio_livecode/Rstudio_livecoding_red_local.png")
knitr::include_graphics("img/rstudio_livecode/Rstudio_livecoding.png")
knitr::include_graphics("img/rstudio_livecode/ngrok_activado.png")
knitr::include_graphics("img/rstudio_livecode/ngrok_publicar.png")
knitr::include_graphics("img/rstudio_livecode/ngrok_activado.png")
knitr::include_graphics("img/rstudio_livecode/Rstudio_livecoding_internet.png")
blogdown:::new_post_addin()
library(tidyverse)
library(osrm)
ciudades <- read.csv("http://bitsandbricks.github.io/data/aglomerados.csv")
de_Gallegos_a_Tucuman <- osrmRoute(src = ciudades[24,],
dst = ciudades[16,],
sp = TRUE,
overview = "full")
de_Gallegos_a_Tucuman
interseccion_od <- structure(list(id_grilla = c(729L, 730L, 731L, 732L, 733L, 734L,
741L, 742L, 743L, 744L), id_calle = c(896L, 896L, 896L, 896L,
896L, 896L, 896L, 896L, 896L, 896L), X_grilla = c(-58.435, -58.435,
-58.435, -58.435, -58.435, -58.435, -58.434, -58.434, -58.434,
-58.434), Y_grilla = c(-34.553, -34.552, -34.551, -34.55, -34.549,
-34.548, -34.552, -34.551, -34.55, -34.549), X_calle = c(-58.4294550182378,
-58.4294550182378, -58.4294550182378, -58.4294550182378, -58.4294550182378,
-58.4294550182378, -58.4294550182378, -58.4294550182378, -58.4294550182378,
-58.4294550182378), Y_calle = c(-34.5506852532647, -34.5506852532647,
-34.5506852532647, -34.5506852532647, -34.5506852532647, -34.5506852532647,
-34.5506852532647, -34.5506852532647, -34.5506852532647, -34.5506852532647
)), row.names = c(NA, 10L), class = "data.frame")
interseccion_od <-
structure(
list(
id_grilla = c(729L, 730L, 731L, 732L, 733L, 734L,
741L, 742L, 743L, 744L),
id_calle = c(896L, 896L, 896L, 896L,
896L, 896L, 896L, 896L, 896L, 896L),
X_grilla = c(
-58.435,
-58.435,
-58.435,
-58.435,
-58.435,
-58.435,
-58.434,
-58.434,
-58.434,
-58.434
),
Y_grilla = c(
-34.553,
-34.552,
-34.551,
-34.55,
-34.549,
-34.548,
-34.552,
-34.551,
-34.55,
-34.549
),
X_calle = c(
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378,
-58.4294550182378
),
Y_calle = c(
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647,
-34.5506852532647
)
),
row.names = c(NA, 10L),
class = "data.frame"
)
interseccion_od
osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst =  c(id_calle, X_calle, Y_calle))
p
p <- interseccion_od[1,]
osrmRoute(src = c(p$id_grilla, p$X_grilla, p$Y_grilla),
dst =  c(p$id_calle, p$X_calle, p$Y_calle))
osrmRoute(src = c(p$id_grilla, p$X_grilla, p$Y_grilla),
dst =  c(p$id_calle, p$X_calle, p$Y_calle),
overview = FALSE)
osrmRoute(src = c(p$id_grilla, p$X_grilla, p$Y_grilla),
dst =  c(p$id_calle, p$X_calle, p$Y_calle),
overview = FALSE) %>% str
distancias <- pmap_df(interseccion_od,
possibly(function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle)
cbind(id_grilla,
id_calle,
as_data_frame(rbind(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle)
overview = FALSE))),
stringsAsFactors = FALSE),
NULL))
pmap_df(interseccion_od,
possibly(function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle)
cbind(id_grilla,
id_calle,
as_data_frame(rbind(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle)
overview = FALSE))),
stringsAsFactors = FALSE),
NULL))
distancias <- pmap_df(interseccion_od,
possibly(function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle)
cbind(id_grilla,
id_calle,
as_data_frame(rbind(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle)
overview = FALSE))),
stringsAsFactors = FALSE),
NULL))
pmap_df(interseccion_od,
possibly(function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle)
cbind(id_grilla,
id_calle,
as_data_frame(rbind(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle)
overview = FALSE))),
stringsAsFactors = FALSE),
NULL))
osrmRoute(src = c(p$id_grilla, p$X_grilla, p$Y_grilla),
dst =  c(p$id_calle, p$X_calle, p$Y_calle),
overview = FALSE)
traer_ruta <- function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle) {
osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle)
overview = FALSE)))
}
pmap_df(interseccion_od,
possibly(
cbind(id_grilla,
id_calle,
as_data_frame(rbind(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle),
overview = FALSE))),
stringsAsFactors = FALSE),
NULL))
interseccion_od
pmap_df(interseccion_od,
possibly(function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle)
cbind(id_grilla,
id_calle,
as_data_frame(rbind(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle),
overview = FALSE))),
stringsAsFactors = FALSE),
NULL))
distancias <- pmap_df(interseccion_od,
possibly(function(id_grilla, id_calle, X_grilla, Y_grilla, X_calle, Y_calle)
cbind(id_grilla,
id_calle,
as_data_frame(osrmRoute(src = c(id_grilla, X_grilla, Y_grilla),
dst = c(id_calle, X_calle, Y_calle),
overview = FALSE)),
stringsAsFactors = FALSE),
NULL))
distancias
interseccion_od
